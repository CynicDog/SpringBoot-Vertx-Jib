name: Build and Push Docker Image

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: spring_vertx_demo
      POSTGRES_USER: cynicdog
      POSTGRES_PASSWORD: cynicdog
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${{ env.POSTGRES_DB }}
      SPRING_DATASOURCE_USERNAME: ${{ env.POSTGRES_USER }}
      SPRING_DATASOURCE_PASSWORD: ${{ env.POSTGRES_PASSWORD }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ env.POSTGRES_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          mvn compile jib:build

      - name: Clean and Package Application
        run: |
          mvn clean package -DskipTests

      - name: Upload Manifests as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: k8s-manifests
          path: target/classes/META-INF/dekorate/
